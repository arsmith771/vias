{"version":3,"sources":["responsive-menus.js"],"names":["genesisMenuParams","genesis_responsive_menu","genesisMenusUnchecked","menuClasses","genesisMenus","menusToCombine","document","$","undefined","each","group","this","key","value","menuString","$menu","length","newString","addClass","replace","push","others","combine","genesisMenu","mainMenuButtonClass","subMenuButtonClass","responsiveMenuClass","_doResize","buttons","attr","_getDisplayValue","removeClass","_maybeClose","_superfish","$args","superfish","delay","animation","opacity","height","dropShadows","speed","_superfishToggle","menuToggleList","_getAllMenusArray","newValue","startLink","endLink","$item","toggleClass","link","_changeSkipLink","primaryMenu","combinedMenus","filter","index","find","appendTo","_getMenuSelectorString","hide","show","_combineMenus","_addClassID","$this","nav","next","match","_mainmenuToggle","_toggleAria","slideToggle","_submenuToggle","closest","siblings","slideUp","$id","element","getElementById","window","getComputedStyle","getPropertyValue","attribute","itemArray","map","join","menuList","valueOf","init","menuIconClass","subMenuIconClass","toggleButtons","menu","class","aria-expanded","aria-pressed","role","append","mainMenu","submenu","text","subMenu","before","menusToToggle","concat","_addMenuButtons","on","triggerHandler","ready","jQuery"],"mappings":"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","file":"../responsive-menus.min.js","sourcesContent":["/**\n * This script adds the accessibility-ready responsive menus Genesis Framework child themes.\n *\n * @author StudioPress\n * @link https://github.com/copyblogger/responsive-menus\n * @version 1.1.2\n * @license GPL-2.0+\n */\n\nvar genesisMenuParams      = typeof genesis_responsive_menu === 'undefined' ? '' : genesis_responsive_menu,\n\tgenesisMenusUnchecked  = genesisMenuParams.menuClasses,\n\tgenesisMenus           = {},\n\tmenusToCombine         = [];\n\n( function ( document, $, undefined ) {\n\n\t'use strict';\n\n\t/**\n\t * Validate the menus passed by the theme with what's being loaded on the page,\n\t * and pass the new and accurate information to our new data.\n\t * @param {genesisMenusUnchecked} Raw data from the localized script in the theme.\n\t * @return {array} genesisMenus array gets populated with updated data.\n\t * @return {array} menusToCombine array gets populated with relevant data.\n\t */\n\t$.each( genesisMenusUnchecked, function( group ) {\n\n\t\t// Mirror our group object to populate.\n\t\tgenesisMenus[group] = [];\n\n\t\t// Loop through each instance of the specified menu on the page.\n\t\t$.each( this, function( key, value ) {\n\n\t\t\tvar menuString = value,\n\t\t\t\t$menu      = $(value);\n\n\t\t\t// If there is more than one instance, append the index and update array.\n\t\t\tif ( $menu.length > 1 ) {\n\n\t\t\t\t$.each( $menu, function( key, value ) {\n\n\t\t\t\t\tvar newString = menuString + '-' + key;\n\n\t\t\t\t\t$(this).addClass( newString.replace('.','') );\n\n\t\t\t\t\tgenesisMenus[group].push( newString );\n\n\t\t\t\t\tif ( 'combine' === group ) {\n\t\t\t\t\t\tmenusToCombine.push( newString );\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t} else if ( $menu.length == 1 ) {\n\n\t\t\t\tgenesisMenus[group].push( menuString );\n\n\t\t\t\tif ( 'combine' === group ) {\n\t\t\t\t\tmenusToCombine.push( menuString );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t});\n\n\t// Make sure there is something to use for the 'others' array.\n\tif ( typeof genesisMenus.others == 'undefined' ) {\n\t\tgenesisMenus.others = [];\n\t}\n\n\t// If there's only one menu on the page for combining, push it to the 'others' array and nullify our 'combine' variable.\n\tif ( menusToCombine.length == 1 ) {\n\t\tgenesisMenus.others.push( menusToCombine[0] );\n\t\tgenesisMenus.combine = null;\n\t\tmenusToCombine = null;\n\t}\n\n\tvar genesisMenu         = {},\n\t\tmainMenuButtonClass = 'menu-toggle',\n\t\tsubMenuButtonClass  = 'sub-menu-toggle',\n\t\tresponsiveMenuClass = 'genesis-responsive-menu';\n\n\t// Initialize.\n\tgenesisMenu.init = function() {\n\n\t\t// Exit early if there are no menus to do anything.\n\t\tif ( $( _getAllMenusArray() ).length == 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar menuIconClass     = typeof genesisMenuParams.menuIconClass !== 'undefined' ? genesisMenuParams.menuIconClass : 'dashicons-before dashicons-menu',\n\t\t\tsubMenuIconClass  = typeof genesisMenuParams.subMenuIconClass !== 'undefined' ? genesisMenuParams.subMenuIconClass : 'dashicons-before dashicons-arrow-down-alt2',\n\t\t\ttoggleButtons     = {\n\t\t\t\tmenu : $( '<button />', {\n\t\t\t\t\t'class' : mainMenuButtonClass,\n\t\t\t\t\t'aria-expanded' : false,\n\t\t\t\t\t'aria-pressed' : false,\n\t\t\t\t\t'role' : 'button'\n\t\t\t\t\t} )\n\t\t\t\t\t.append( genesisMenuParams.mainMenu ),\n\t\t\t\tsubmenu : $( '<button />', {\n\t\t\t\t\t'class' : subMenuButtonClass,\n\t\t\t\t\t'aria-expanded' : false,\n\t\t\t\t\t'aria-pressed' : false,\n\t\t\t\t\t'role' : 'button'\n\t\t\t\t\t} )\n\t\t\t\t\t.append( $( '<span />', {\n\t\t\t\t\t\t'class' : 'screen-reader-text',\n\t\t\t\t\t\t'text' : genesisMenuParams.subMenu\n\t\t\t\t\t} ) )\n\t\t\t};\n\n\t\t// Add the responsive menu class to the active menus.\n\t\t_addResponsiveMenuClass();\n\n\t\t// Add the main nav button to the primary menu, or exit the plugin.\n\t\t_addMenuButtons( toggleButtons );\n\n\t\t// Setup additional classes.\n\t\t$( '.' + mainMenuButtonClass ).addClass( menuIconClass );\n\t\t$( '.' + subMenuButtonClass ).addClass( subMenuIconClass );\n\t\t$( '.' + mainMenuButtonClass ).on( 'click.genesisMenu-mainbutton', _mainmenuToggle ).each( _addClassID );\n\t\t$( '.' + subMenuButtonClass ).on( 'click.genesisMenu-subbutton', _submenuToggle );\n\t\t$( window ).on( 'resize.genesisMenu', _doResize ).triggerHandler( 'resize.genesisMenu' );\n\t};\n\n\t/**\n\t * Add menu toggle button to appropriate menus.\n\t * @param {toggleButtons} Object of menu buttons to use for toggles.\n\t */\n\tfunction _addMenuButtons( toggleButtons ) {\n\n\t\t// Apply sub menu toggle to each sub-menu found in the menuList.\n\t\t$( _getMenuSelectorString( genesisMenus ) ).find( '.sub-menu' ).before( toggleButtons.submenu );\n\n\n\t\tif ( menusToCombine !== null ) {\n\n\t\t\tvar menusToToggle = genesisMenus.others.concat( menusToCombine[0] );\n\n\t\t \t// Only add menu button the primary menu and navs NOT in the combine variable.\n\t\t \t$( _getMenuSelectorString( menusToToggle ) ).before( toggleButtons.menu );\n\n\t\t} else {\n\n\t\t\t// Apply the main menu toggle to all menus in the list.\n\t\t\t$( _getMenuSelectorString( genesisMenus.others ) ).before( toggleButtons.menu );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Add the responsive menu class.\n\t */\n\tfunction _addResponsiveMenuClass() {\n\t\t$( _getMenuSelectorString( genesisMenus ) ).addClass( responsiveMenuClass );\n\t}\n\n\t/**\n\t * Execute our responsive menu functions on window resizing.\n\t */\n\tfunction _doResize() {\n\t\tvar buttons   = $( 'button[id^=\"genesis-mobile-\"]' ).attr( 'id' );\n\t\tif ( typeof buttons === 'undefined' ) {\n\t\t\treturn;\n\t\t}\n\t\t_maybeClose( buttons );\n\t\t_superfishToggle( buttons );\n\t\t_changeSkipLink( buttons );\n\t\t_combineMenus( buttons );\n\t}\n\n\t/**\n\t * Add the nav- class of the related navigation menu as\n\t * an ID to associated button (helps target specific buttons outside of context).\n\t */\n\tfunction _addClassID() {\n\t\tvar $this = $( this ),\n\t\t\tnav   = $this.next( 'nav' ),\n\t\t\tid    = 'class';\n\n\t\t$this.attr( 'id', 'genesis-mobile-' + $( nav ).attr( id ).match( /nav-\\w*\\b/ ) );\n\t}\n\n\t/**\n\t * Combine our menus if the mobile menu is visible.\n\t * @params buttons\n\t */\n\tfunction _combineMenus( buttons ){\n\n\t\t// Exit early if there are no menus to combine.\n\t\tif ( menusToCombine == null ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Split up the menus to combine based on order of appearance in the array.\n\t\tvar primaryMenu   = menusToCombine[0],\n\t\t\tcombinedMenus = $( menusToCombine ).filter( function(index) { if ( index > 0 ) { return index; } });\n\n\t\t// If the responsive menu is active, append items in 'combinedMenus' object to the 'primaryMenu' object.\n\t\tif ( 'none' !== _getDisplayValue( buttons ) ) {\n\n\t\t\t$.each( combinedMenus, function( key, value ) {\n\t\t\t\t$(value).find( '.menu > li' ).addClass( 'moved-item-' + value.replace( '.','' ) ).appendTo( primaryMenu + ' ul.genesis-nav-menu' );\n\t\t\t});\n\t\t\t$( _getMenuSelectorString( combinedMenus ) ).hide();\n\n\t\t} else {\n\n\t\t\t$( _getMenuSelectorString( combinedMenus ) ).show();\n\t\t\t$.each( combinedMenus, function( key, value ) {\n\t\t\t\t$( '.moved-item-' + value.replace( '.','' ) ).appendTo( value + ' ul.genesis-nav-menu' ).removeClass( 'moved-item-' + value.replace( '.','' ) );\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Action to happen when the main menu button is clicked.\n\t */\n\tfunction _mainmenuToggle() {\n\t\tvar $this = $( this );\n\t\t_toggleAria( $this, 'aria-pressed' );\n\t\t_toggleAria( $this, 'aria-expanded' );\n\t\t$this.toggleClass( 'activated' );\n\t\t$this.next( 'nav' ).slideToggle( 'fast' );\n\t}\n\n\t/**\n\t * Action for submenu toggles.\n\t */\n\tfunction _submenuToggle() {\n\n\t\tvar $this  = $( this ),\n\t\t\tothers = $this.closest( '.menu-item' ).siblings();\n\t\t_toggleAria( $this, 'aria-pressed' );\n\t\t_toggleAria( $this, 'aria-expanded' );\n\t\t$this.toggleClass( 'activated' );\n\t\t$this.next( '.sub-menu' ).slideToggle( 'fast' );\n\n\t\tothers.find( '.' + subMenuButtonClass ).removeClass( 'activated' ).attr( 'aria-pressed', 'false' );\n\t\tothers.find( '.sub-menu' ).slideUp( 'fast' );\n\n\t}\n\n\t/**\n\t * Activate/deactivate superfish.\n\t * @params buttons\n\t */\n\tfunction _superfishToggle( buttons ) {\n\t\tvar _superfish = $( '.' + responsiveMenuClass + ' .js-superfish' ),\n\t\t\t$args      = 'destroy';\n\t\tif ( typeof _superfish.superfish !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( 'none' === _getDisplayValue( buttons ) ) {\n\t\t\t$args = {\n\t\t\t\t'delay': 100,\n\t\t\t\t'animation': {'opacity': 'show', 'height': 'show'},\n\t\t\t\t'dropShadows': false,\n\t\t\t\t'speed': 'fast'\n\t\t\t};\n\t\t}\n\t\t_superfish.superfish( $args );\n\t}\n\n\t/**\n\t * Modify skip link to match mobile buttons.\n\t * @param buttons\n\t */\n\tfunction _changeSkipLink( buttons ) {\n\n\t\t// Start with an empty array.\n\t\tvar menuToggleList = _getAllMenusArray();\n\n\t\t// Exit out if there are no menu items to update.\n\t\tif ( ! $( menuToggleList ).length > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$.each( menuToggleList, function ( key, value ) {\n\n\t\t\tvar newValue  = value.replace( '.', '' ),\n\t\t\t\tstartLink = 'genesis-' + newValue,\n\t\t\t\tendLink   = 'genesis-mobile-' + newValue;\n\n\t\t\tif ( 'none' == _getDisplayValue( buttons ) ) {\n\t\t\t\tstartLink = 'genesis-mobile-' + newValue;\n\t\t\t\tendLink   = 'genesis-' + newValue;\n\t\t\t}\n\n\t\t\tvar $item = $( '.genesis-skip-link a[href=\"#' + startLink + '\"]' );\n\n\t\t\tif ( menusToCombine !== null && value !== menusToCombine[0] ) {\n\t\t\t\t$item.toggleClass( 'skip-link-hidden' );\n\t\t\t}\n\n\t\t\tif ( $item.length > 0 ) {\n\t\t\t\tvar link  = $item.attr( 'href' );\n\t\t\t\t\tlink  = link.replace( startLink, endLink );\n\n\t\t\t\t$item.attr( 'href', link );\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\t/**\n\t * Close all the menu toggles if buttons are hidden.\n\t * @param buttons\n\t */\n\tfunction _maybeClose( buttons ) {\n\t\tif ( 'none' !== _getDisplayValue( buttons ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$( '.' + mainMenuButtonClass + ', .' + responsiveMenuClass + ' .sub-menu-toggle' )\n\t\t\t.removeClass( 'activated' )\n\t\t\t.attr( 'aria-expanded', false )\n\t\t\t.attr( 'aria-pressed', false );\n\n\t\t$( '.' + responsiveMenuClass + ', ' + responsiveMenuClass + ' .sub-menu' )\n\t\t\t.attr( 'style', '' );\n\t}\n\n\t/**\n\t * Generic function to get the display value of an element.\n\t * @param  {id} $id ID to check\n\t * @return {string}     CSS value of display property\n\t */\n\tfunction _getDisplayValue( $id ) {\n\t\tvar element = document.getElementById( $id ),\n\t\t\tstyle   = window.getComputedStyle( element );\n\t\treturn style.getPropertyValue( 'display' );\n\t}\n\n\t/**\n\t * Toggle aria attributes.\n\t * @param  {button} $this     passed through\n\t * @param  {aria-xx} attribute aria attribute to toggle\n\t * @return {bool}           from _ariaReturn\n\t */\n\tfunction _toggleAria( $this, attribute ) {\n\t\t$this.attr( attribute, function( index, value ) {\n\t\t\treturn 'false' === value;\n\t\t});\n\t}\n\n\t/**\n\t * Helper function to return a comma separated string of menu selectors.\n\t * @param {itemArray} Array of menu items to loop through.\n\t * @param {ignoreSecondary} boolean of whether to ignore the 'secondary' menu item.\n\t * @return {string} Comma-separated string.\n\t */\n\tfunction _getMenuSelectorString( itemArray ) {\n\n\t\tvar itemString = $.map( itemArray, function( value, key ) {\n\t\t\treturn value;\n\t\t});\n\n\t\treturn itemString.join( ',' );\n\n\t}\n\n\t/**\n\t * Helper function to return a group array of all the menus in\n\t * both the 'others' and 'combine' arrays.\n\t * @return {array} Array of all menu items as class selectors.\n\t */\n\tfunction _getAllMenusArray() {\n\n\t\t// Start with an empty array.\n\t\tvar menuList = [];\n\n\t\t// If there are menus in the 'menusToCombine' array, add them to 'menuList'.\n\t\tif ( menusToCombine !== null ) {\n\n\t\t\t$.each( menusToCombine, function( key, value ) {\n\t\t\t\tmenuList.push( value.valueOf() );\n\t\t\t});\n\n\t\t}\n\n\t\t// Add menus in the 'others' array to 'menuList'.\n\t\t$.each( genesisMenus.others, function( key, value ) {\n\t\t\tmenuList.push( value.valueOf() );\n\t\t});\n\n\t\tif ( menuList.length > 0 ) {\n\t\t\treturn menuList;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t$(document).ready(function () {\n\n\t\tif ( _getAllMenusArray() !== null ) {\n\n\t\t\tgenesisMenu.init();\n\n\t\t}\n\n\t});\n\n})( document, jQuery );\n"]}